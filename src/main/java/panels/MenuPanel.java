/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import control.Controller;
import global.Global;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.util.ResourceBundle;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Marci
 */
public class MenuPanel extends javax.swing.JPanel {

    Controller controller;
    Image wallpaperImg = new ImageIcon(this.getClass().getResource(Global.MENU_IMAGE)).getImage();
    int xMouse;
    int yMouse;

    ImageIcon exitButtonImage = new ImageIcon(this.getClass().getResource("/kepek/exit_button.png"));
    ImageIcon exitButtonPressedImage = new ImageIcon(this.getClass().getResource("/kepek/exit_button_pressed.png"));
    ImageIcon minimizeButtonImage = new ImageIcon(this.getClass().getResource("/kepek/minimize_button.png"));
    ImageIcon minimizeButtonPressedImage = new ImageIcon(this.getClass().getResource("/kepek/minimize_button_pressed.png"));
    ImageIcon infoButtonImage = new ImageIcon(this.getClass().getResource("/kepek/info_button.png"));
    ImageIcon infoButtonPressedImage = new ImageIcon(this.getClass().getResource("/kepek/info_button_pressed.png"));
    ImageIcon menuButtonImage = new ImageIcon(this.getClass().getResource("/kepek/menu_button.png"));
    ImageIcon menuButtonLightImage = new ImageIcon(this.getClass().getResource("/kepek/menu_button_light.png"));
    ImageIcon menuButtonDarkImage = new ImageIcon(this.getClass().getResource("/kepek/menu_button_dark.png"));
    ImageIcon musicButtonOn = new ImageIcon(this.getClass().getResource("/kepek/music_on_button.png"));
    ImageIcon musicButtonOff = new ImageIcon(this.getClass().getResource("/kepek/music_off_button.png"));
    ImageIcon languageButtonEn = new ImageIcon(this.getClass().getResource("/kepek/language_en.png"));
    ImageIcon languageButtonHu = new ImageIcon(this.getClass().getResource("/kepek/language_hu.png"));

    /**
     * Creates new form MenuPanel
     */
    public MenuPanel() {
        initComponents();
        setting();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        int pointX = 0, pointY = 0,
                width = this.getWidth(),
                height = this.getHeight();
        g.drawImage(wallpaperImg, pointX, pointY, width, height, null);
    }

    public void setController(Controller controller) {
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStart = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        btnResults = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnMinimize = new javax.swing.JButton();
        btnInfo = new javax.swing.JButton();
        btnMusic = new javax.swing.JButton();
        btnLanguage = new javax.swing.JButton();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnStart.setFont(new java.awt.Font("Eras Medium ITC", 1, 18)); // NOI18N
        btnStart.setForeground(new java.awt.Color(204, 204, 204));
        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kepek/menu_button.png"))); // NOI18N
        btnStart.setText("Indítás");
        btnStart.setToolTipText("");
        btnStart.setBorderPainted(false);
        btnStart.setContentAreaFilled(false);
        btnStart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStartMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStartMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnStartMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnStartMouseReleased(evt);
            }
        });
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        add(btnStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 160, 30));

        txtName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 110, 30));

        btnResults.setFont(new java.awt.Font("Eras Medium ITC", 1, 18)); // NOI18N
        btnResults.setForeground(new java.awt.Color(204, 204, 204));
        btnResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kepek/menu_button.png"))); // NOI18N
        btnResults.setText("Eredmények");
        btnResults.setBorderPainted(false);
        btnResults.setContentAreaFilled(false);
        btnResults.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnResults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnResultsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnResultsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnResultsMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnResultsMouseReleased(evt);
            }
        });
        add(btnResults, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 160, 30));

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kepek/exit_button.png"))); // NOI18N
        btnExit.setBorderPainted(false);
        btnExit.setContentAreaFilled(false);
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnExitMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnExitMouseReleased(evt);
            }
        });
        add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 30, 30));

        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kepek/minimize_button.png"))); // NOI18N
        btnMinimize.setBorderPainted(false);
        btnMinimize.setContentAreaFilled(false);
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnMinimizeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseReleased(evt);
            }
        });
        add(btnMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 30, 30));

        btnInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kepek/info_button.png"))); // NOI18N
        btnInfo.setBorderPainted(false);
        btnInfo.setContentAreaFilled(false);
        btnInfo.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/kepek/info_button.png"))); // NOI18N
        btnInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnInfoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnInfoMouseReleased(evt);
            }
        });
        add(btnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 30, 30));

        btnMusic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kepek/music_on_button.png"))); // NOI18N
        btnMusic.setBorderPainted(false);
        btnMusic.setContentAreaFilled(false);
        btnMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMusicActionPerformed(evt);
            }
        });
        add(btnMusic, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 470, 30, 30));

        btnLanguage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kepek/language_hu.png"))); // NOI18N
        btnLanguage.setBorderPainted(false);
        btnLanguage.setContentAreaFilled(false);
        btnLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLanguageActionPerformed(evt);
            }
        });
        add(btnLanguage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 30, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        if (txtName.getText().isEmpty()) {
            controller.blankNameDialog();
        } else {
            controller.gameStart(txtName.getText());
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMousePressed
        btnExit.setIcon(exitButtonPressedImage);
    }//GEN-LAST:event_btnExitMousePressed

    private void btnExitMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseReleased
        btnExit.setIcon(exitButtonImage);
        controller.exitDialog();
    }//GEN-LAST:event_btnExitMouseReleased

    private void btnMinimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMousePressed
        btnMinimize.setIcon(minimizeButtonPressedImage);
    }//GEN-LAST:event_btnMinimizeMousePressed

    private void btnMinimizeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseReleased
        btnMinimize.setIcon(minimizeButtonImage);
        controller.iconify();
    }//GEN-LAST:event_btnMinimizeMouseReleased

    private void btnInfoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInfoMousePressed
        if (btnInfo.isEnabled() == true) {
            btnInfo.setIcon(infoButtonPressedImage);
        }
    }//GEN-LAST:event_btnInfoMousePressed

    private void btnInfoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInfoMouseReleased
        if (btnInfo.isEnabled() == true) {
            btnInfo.setIcon(infoButtonImage);
            controller.infoStart();
        }
    }//GEN-LAST:event_btnInfoMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int xScreen = evt.getXOnScreen();
        int yScreen = evt.getYOnScreen();

        ((JFrame) SwingUtilities.getWindowAncestor(this)).setLocation(xScreen - xMouse, yScreen - yMouse);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void btnStartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseEntered
        btnStart.setIcon(menuButtonLightImage);
        controller.buttonEnteredEffect();
    }//GEN-LAST:event_btnStartMouseEntered

    private void btnStartMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseExited
        btnStart.setIcon(menuButtonImage);
    }//GEN-LAST:event_btnStartMouseExited

    private void btnStartMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMousePressed
        btnStart.setIcon(menuButtonDarkImage);
        controller.buttonPressedEffect();
    }//GEN-LAST:event_btnStartMousePressed

    private void btnStartMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseReleased
        btnStart.setIcon(menuButtonImage);
    }//GEN-LAST:event_btnStartMouseReleased

    private void btnResultsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResultsMouseEntered
        btnResults.setIcon(menuButtonLightImage);
        controller.buttonEnteredEffect();
    }//GEN-LAST:event_btnResultsMouseEntered

    private void btnResultsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResultsMouseExited
        btnResults.setIcon(menuButtonImage);
    }//GEN-LAST:event_btnResultsMouseExited

    private void btnResultsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResultsMousePressed
        btnResults.setIcon(menuButtonDarkImage);
        controller.buttonPressedEffect();
    }//GEN-LAST:event_btnResultsMousePressed

    private void btnResultsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResultsMouseReleased
        btnResults.setIcon(menuButtonImage);
        controller.showResult();
    }//GEN-LAST:event_btnResultsMouseReleased

    private void btnMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMusicActionPerformed
        if (btnMusic.getIcon().equals(musicButtonOn)) {
            btnMusic.setIcon(musicButtonOff);
            controller.musicOff();
        } else {
            btnMusic.setIcon(musicButtonOn);
            controller.mainMusicStart();
        }
    }//GEN-LAST:event_btnMusicActionPerformed

    private void btnLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLanguageActionPerformed
        if (btnLanguage.getIcon().equals(languageButtonHu)) {
            btnLanguage.setIcon(languageButtonEn);
            controller.bundleSetting("en");
        } else {
            btnLanguage.setIcon(languageButtonHu);
            controller.bundleSetting("hu");
        }
    }//GEN-LAST:event_btnLanguageActionPerformed

    private void setting() {
        btnMusic.setIcon(musicButtonOn);
        btnLanguage.setIcon(languageButtonHu);

        Toolkit toolKit = Toolkit.getDefaultToolkit();
        Image cursorImage = new ImageIcon(this.getClass().getResource("/kepek/cursor_image_blue.png")).getImage();
        Point pont = new Point(0, 0);
        Cursor cursor = toolKit.createCustomCursor(cursorImage, pont, "Cursor");

        this.setCursor(cursor);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInfo;
    private javax.swing.JButton btnLanguage;
    private javax.swing.JButton btnMinimize;
    private javax.swing.JButton btnMusic;
    private javax.swing.JButton btnResults;
    private javax.swing.JButton btnStart;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    public void infoButtonDisable() {
        btnInfo.setEnabled(false);
    }

    public void infoButtonEnable() {
        btnInfo.setEnabled(true);
    }

    public void languageSetting(ResourceBundle bundle) {
        btnStart.setText(bundle.getString("btnStart.text"));
        btnResults.setText(bundle.getString("btnResult.text"));
    }
}
